buildscript {
  repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
  }
  dependencies {
    classpath 'io.fabric.tools:gradle:1.+'
  }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
  maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'com.fernandocejas.frodo'
apply plugin: 'realm-android'

android {
  def globalConfiguration = rootProject.extensions.getByName("ext")

  compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
  buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

  if (project.hasProperty('devBuild')) {
    splits.density.enable = false
    aaptOptions.crunchedEnabled = false
  }

  dexOptions {
    maxProcessCount 2
    preDexLibraries = false
    javaMaxHeapSize "4g"
  }

  configurations {
    all*.exclude group: 'commons-logging', module: 'commons-logging'
    all*.exclude group: 'org.apache.httpcomponents', module: 'httpclient'
  }

  configurations.all {
    resolutionStrategy {
      force 'com.squareup:javawriter:2.5.0'
    }
  }

  defaultConfig {
    renderscriptTargetApi globalConfiguration.getAt("androidCompileSdkVersion")
    renderscriptSupportModeEnabled true

    minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
    targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

    applicationId globalConfiguration.getAt("androidApplicationId")
    versionCode globalConfiguration.getAt("androidVersionCode")
    versionName globalConfiguration.getAt("androidVersionName")
    testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
    testApplicationId globalConfiguration.getAt("testApplicationId")

    multiDexEnabled = true;

    resValue "string", "app_name", "Tribe"
    resValue "string", "no_profile_picture_url", "http://no"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'AUTHORS'
  }

  lintOptions {
    quiet true
    abortOnError false
    ignoreWarnings true
    disable 'InvalidPackage'
    disable 'OldTargetApi'
  }

  signingConfigs {
    debug {
      storeFile file('../buildsystem/debug.keystore')
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }

    release {
      storeFile file(RELEASE_STORE_FILE)
      storePassword RELEASE_STORE_PASSWORD
      keyAlias RELEASE_KEY_ALIAS
      keyPassword RELEASE_KEY_PASSWORD
    }
  }

  buildTypes {
    debug {
      generateStrings()
      signingConfig signingConfigs.debug
      testCoverageEnabled false
      applicationIdSuffix = ".debug"
      resValue "string", "app_name", "Tribe DEBUG"
      resValue "string", "branch_io", "\"${branch_io_debug}\""
      resValue "string", "facebook_app_id", "1868589180063532"
      resValue "string", "facebook_app_account_kit_id", "1e8336b21016197ea47922a11b88e141"
      resValue "string", "web_host", "\"${tribe_web_host_debug}\""
      resValue "string", "branch_host", "\"${tribe_branch_host_debug}\""
      resValue "string", "deeplink_host", "\"${tribe_deeplink_host_debug}\""
      buildConfigField "String", "TRIBE_PUBLIC_KEY", "\"${tribe_public_key_debug}\""
      buildConfigField "String", "TRIBE_PRIVATE_KEY", "\"${tribe_private_key_debug}\""
      buildConfigField "String", "TRIBE_API", "\"https://api.tribedev.pm\""
      buildConfigField "String", "TRIBE_AUTH", "\"https://auth.tribedev.pm\""
      buildConfigField "String", "TRIBE_LOOKUP", "\"https://lookup.tribedev.pm\""
      buildConfigField "String", "TRIBE_GROWTH", "\"https://growth.tribedev.pm\""
      buildConfigField "String", "TRIBE_STATIC", "\"https://static.tribe.pm\""
      buildConfigField "String", "TRIBE_WSS", "\"wss://api.tribedev.pm\""
      buildConfigField "String", "TRIBE_GAME_MASTER_WSS", "\"ws://game.tribedev.pm\""
      //buildConfigField "String", "TRIBE_GAME_MASTER_WSS", "\"ws://10.0.0.240:3000\""
      buildConfigField "String", "MIXPANEL_TOKEN", "\"${mixpanel_debug}\""
      buildConfigField "String", "TRIBE_URL", "\"${tribe_url_debug}\""
      buildConfigField "String", "TRIBE_DYNAMIC_LINK", "\"${tribe_dynamic_link_debug}\""
      buildConfigField "String", "MIXPANEL_GOOGLE_API", "\"${mixpanel_google_debug}\""
      buildConfigField "String", "TRIBE_ORIGIN", "\"${tribe_url_origin_debug}\""
      buildConfigField "String", "OPENTDB_URL", "\"${tribe_opentdb_url}\""
      debuggable = true
      jniDebuggable = false
      zipAlignEnabled false
    }
    release {
      debuggable false
      minifyEnabled true
      shrinkResources true
      signingConfig signingConfigs.release
      resValue "string", "app_name", "Tribe"
      resValue "string", "branch_io", "\"${branch_io_prod}\""
      resValue "string", "facebook_app_id", "1743579545897830"
      resValue "string", "facebook_app_account_kit_id", "e42f3c0acb92513ea76bda283c459073"
      resValue "string", "web_host", "\"${tribe_web_host}\""
      resValue "string", "branch_host", "\"${tribe_branch_host}\""
      resValue "string", "deeplink_host", "\"${tribe_deeplink_host}\""
      buildConfigField "String", "TRIBE_PUBLIC_KEY", "\"${tribe_public_key}\""
      buildConfigField "String", "TRIBE_PRIVATE_KEY", "\"${tribe_private_key}\""
      buildConfigField "String", "TRIBE_API", "\"https://api2.tribe.pm\""
      buildConfigField "String", "TRIBE_AUTH", "\"https://auth2.tribe.pm\""
      buildConfigField "String", "TRIBE_WSS", "\"wss://api2.tribe.pm\""
      buildConfigField "String", "TRIBE_LOOKUP", "\"https://lookup.tribe.pm\""
      buildConfigField "String", "TRIBE_GROWTH", "\"https://growth.tribe.pm\""
      buildConfigField "String", "TRIBE_STATIC", "\"https://static.tribe.pm\""
      buildConfigField "String", "TRIBE_GAME_MASTER_WSS", "\"ws://game.tribedev.pm\""
      buildConfigField "String", "MIXPANEL_TOKEN", "\"${mixpanel_prod}\""
      buildConfigField "String", "TRIBE_URL", "\"${tribe_url}\""
      buildConfigField "String", "TRIBE_DYNAMIC_LINK", "\"${tribe_dynamic_link}\""
      buildConfigField "String", "MIXPANEL_GOOGLE_API", "\"${mixpanel_google_prod}\""
      buildConfigField "String", "TRIBE_ORIGIN", "\"${tribe_url_origin}\""
      buildConfigField "String", "OPENTDB_URL", "\"${tribe_opentdb_url}\""
      proguardFiles getDefaultProguardFile('proguard-android.txt'),
          'proguard-google-play-services.pro',
          'proguard-dagger.pro',
          'proguard-butterknife.pro',
          'proguard-crashlytics.pro',
          'proguard-dagger.pro',
          'proguard-gson.pro',
          'proguard-okhttp.pro',
          'proguard-retrolambda.pro',
          'proguard-rxjava.pro',
          'proguard-timber.pro',
          'proguard-stetho.pro',
          'proguard-appcompat-v7.pro',
          'proguard-glide.pro',
          'proguard-retrofit.pro',
          'proguard-webrtc.pro',
          'proguard-corona.pro',
          'proguard-rules.pro'
    }
  }
}

def generateStrings() {
  exec {
    commandLine './generate_strings'
  }
}

repositories {
  maven { url 'https://zendesk.jfrog.io/zendesk/repo' }
}

dependencies {
  def presentationDependencies = rootProject.ext.presentationDependencies
  def presentationTestDependencies = rootProject.ext.presentationTestDependencies
  def developmentDependencies = rootProject.ext.developmentDependencies
  annotationProcessor presentationDependencies.daggerCompiler
  compile presentationDependencies.dagger
  annotationProcessor presentationDependencies.butterKnifeCompiler
  compile presentationDependencies.butterKnife
  compile presentationDependencies.appCompat
  compile presentationDependencies.designSupport
  compile presentationDependencies.cardDesign
  compile presentationDependencies.rxJava
  compile presentationDependencies.rxAndroid
  compile presentationDependencies.retrofit
  compile presentationDependencies.retrofitGsonConverter
  compile presentationDependencies.retrofitRxAdapter
  compile presentationDependencies.gson
  compile presentationDependencies.okHttp
  compile presentationDependencies.okHttpLoggingInterceptor
  compile presentationDependencies.androidAnnotations
  provided presentationDependencies.javaxAnnotation
  compile presentationDependencies.priorityJobQueue
  compile presentationDependencies.rxBindings
  compile presentationDependencies.glide
  compile presentationDependencies.glideOKHttp
  compile presentationDependencies.byteUnits
  compile presentationDependencies.rebound
  compile presentationDependencies.rxSharedPreferences
  compile presentationDependencies.libPhoneNumber
  compile presentationDependencies.firebaseMessaging
  compile presentationDependencies.circularProgressView
  compile presentationDependencies.googlePlayBase
  compile presentationDependencies.googlePlayGcm
  compile presentationDependencies.rxPermissions
  compile presentationDependencies.facebook
  compile presentationDependencies.facebookAccountKit
  compile presentationDependencies.multiDex
  compile presentationDependencies.mixpanel
  compile presentationDependencies.imageCropper
  compile presentationDependencies.firebaseInvites
  compile presentationDependencies.recyclerViewAnimators
  compile presentationDependencies.firebaseRemote
  compile presentationDependencies.firebaseStorage
  compile presentationDependencies.branchIo
  compile presentationDependencies.timber
  compile presentationDependencies.rxAppState
  compile presentationDependencies.flexbox
  compile presentationDependencies.instacapture
  compile presentationDependencies.jodatime
  compile 'me.leolin:ShortcutBadger:1.1.18@aar'
  compile presentationDependencies.constraintLayout
  compile presentationDependencies.AVLoadingIndicatorView
  compile 'com.zendesk:sdk-providers:1.11.0.1'
  compile presentationDependencies.exoPlayer
  compile presentationDependencies.blurView
  //compile presentationDependencies.firebaseCore
  //androidTestCompile presentationTestDependencies.mockito
  //androidTestCompile presentationTestDependencies.dexmaker
  //androidTestCompile presentationTestDependencies.dexmakerMockito
  //androidTestCompile presentationTestDependencies.espresso
  //androidTestCompile presentationTestDependencies.androidAnnotations
  //androidTestCompile presentationTestDependencies.testingSupportLib
  // Development
  compile developmentDependencies.leakCanary
  compile developmentDependencies.stetho
  compile developmentDependencies.stethoOkHttp
  //compile developmentDependencies.androidDevMetrics
  //compile developmentDependencies.takt
  implementation project(':AdapterDelegates')
  implementation project(':tribelivesdk')
  implementation project(':ViewNavigator')
  implementation project(':tokenlib')
  compile('com.crashlytics.sdk.android:crashlytics:2.9.0@aar') {
    transitive = true;
  }
  // Corona
  compile fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
  provided files('libs/Corona.jar')
  provided files('libs/JNLua.jar')
  provided files('libs/network.jar')
  //provided files('libs/zip4j_1.3.2.jar')
}

apply plugin: 'com.google.gms.google-services'
