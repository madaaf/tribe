buildscript {
  repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }
  }
  dependencies {
    classpath 'me.tatarka:gradle-retrolambda:3.2.3'
    classpath 'io.fabric.tools:gradle:1.+'
  }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
  maven { url 'https://maven.fabric.io/public' }
  maven { url "https://jitpack.io" }
}

apply plugin: 'realm-android'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.fernandocejas.frodo'
apply plugin: 'me.tatarka.retrolambda'

android {
  def globalConfiguration = rootProject.extensions.getByName("ext")

  compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
  buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

  dexOptions {
    maxProcessCount 2
    preDexLibraries = false
    javaMaxHeapSize "4g"
  }

  defaultConfig {
    renderscriptTargetApi globalConfiguration.getAt("androidTargetSdkVersion")
    renderscriptSupportModeEnabled true

    minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
    targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

    applicationId globalConfiguration.getAt("androidApplicationId")
    versionCode globalConfiguration.getAt("androidVersionCode")
    versionName globalConfiguration.getAt("androidVersionName")
    testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
    testApplicationId globalConfiguration.getAt("testApplicationId")

    multiDexEnabled = true;

    resValue "string", "app_name", "Tribe"
    resValue "string", "facebook_app_id", "1743579545897830"
    resValue "string", "no_profile_picture_url", "http://no"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
  }

  lintOptions {
    quiet true
    abortOnError false
    ignoreWarnings true
    disable 'InvalidPackage'
    disable 'OldTargetApi'
  }

  signingConfigs {
    debug {
      storeFile file('../buildsystem/debug.keystore')
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }

    release {
      storeFile file(RELEASE_STORE_FILE)
      storePassword RELEASE_STORE_PASSWORD
      keyAlias RELEASE_KEY_ALIAS
      keyPassword RELEASE_KEY_PASSWORD
    }
  }

  buildTypes {
    debug {
      //generateStrings()

      signingConfig signingConfigs.debug
      testCoverageEnabled true
      applicationIdSuffix = ".debug"
      resValue "string", "app_name", "Tribe DEBUG"
      resValue "string", "branch_io", "\"${branch_io_debug}\""

      buildConfigField "String", "TRIBE_PUBLIC_KEY", "\"${tribe_public_key_debug}\""
      buildConfigField "String", "TRIBE_PRIVATE_KEY", "\"${tribe_private_key_debug}\""
      buildConfigField "String", "TRIBE_API", "\"https://api.tribedev.pm\""
      buildConfigField "String", "TRIBE_AUTH", "\"https://auth.tribedev.pm\""
      buildConfigField "String", "AMPLITUDE_KEY", "\"${amplitude_debug}\""
      buildConfigField "String", "TRIBE_URL", "\"${tribe_url_debug}\""
      buildConfigField "String", "TRIBE_DYNAMIC_LINK", "\"${tribe_dynamic_link_debug}\""
    }

    tribe2 {
      debuggable false
      signingConfig signingConfigs.release
      applicationIdSuffix = ".Tribe2"
      resValue "string", "app_name", "Tribe2"
      resValue "string", "branch_io", "\"${branch_io_prod}\""

      buildConfigField "String", "TRIBE_PUBLIC_KEY", "\"${tribe_public_key_tribe2}\""
      buildConfigField "String", "TRIBE_PRIVATE_KEY", "\"${tribe_private_key_tribe2}\""
      buildConfigField "String", "TRIBE_API", "\"https://api.tribe.pm\""
      buildConfigField "String", "TRIBE_AUTH", "\"https://auth.tribe.pm\""
      buildConfigField "String", "AMPLITUDE_KEY", "\"${amplitude_prod}\""
      buildConfigField "String", "TRIBE_URL", "\"${tribe_url_tribe2}\""
      buildConfigField "String", "TRIBE_DYNAMIC_LINK", "\"${tribe_dynamic_link_tribe2}\""
    }

    release {
      debuggable false
      minifyEnabled true
      shrinkResources true
      signingConfig signingConfigs.release
      resValue "string", "app_name", "Tribe"
      resValue "string", "branch_io", "\"${branch_io_prod}\""

      buildConfigField "String", "TRIBE_PUBLIC_KEY", "\"${tribe_public_key}\""
      buildConfigField "String", "TRIBE_PRIVATE_KEY", "\"${tribe_private_key}\""
      buildConfigField "String", "TRIBE_API", "\"https://api.tribe.pm\""
      buildConfigField "String", "TRIBE_AUTH", "\"https://auth.tribe.pm\""
      buildConfigField "String", "AMPLITUDE_KEY", "\"${amplitude_prod}\""
      buildConfigField "String", "TRIBE_URL", "\"${tribe_url}\""
      buildConfigField "String", "TRIBE_DYNAMIC_LINK", "\"${tribe_dynamic_link}\""
    }
  }
}

def generateStrings() {
  exec {
    commandLine './generate_strings'
  }
}

dependencies {
  def presentationDependencies = rootProject.ext.presentationDependencies
  def presentationTestDependencies = rootProject.ext.presentationTestDependencies
  def developmentDependencies = rootProject.ext.developmentDependencies

  apt presentationDependencies.daggerCompiler
  compile presentationDependencies.dagger
  apt presentationDependencies.butterKnifeCompiler
  compile presentationDependencies.butterKnife
  compile presentationDependencies.appCompat
  compile presentationDependencies.designSupport
  compile presentationDependencies.cardDesign
  compile presentationDependencies.rxJava
  compile presentationDependencies.rxAndroid
  compile presentationDependencies.retrofit
  compile presentationDependencies.retrofitGsonConverter
  compile presentationDependencies.retrofitRxAdapter
  compile presentationDependencies.gson
  compile presentationDependencies.okHttp
  compile presentationDependencies.okHttpLoggingInterceptor
  compile presentationDependencies.androidAnnotations
  provided presentationDependencies.javaxAnnotation
  compile presentationDependencies.priorityJobQueue
  compile presentationDependencies.rxBindings
  //compile presentationDependencies.picasso
  //compile presentationDependencies.picassoDownloader
  compile presentationDependencies.glide
  compile presentationDependencies.glideOKHttp
  compile presentationDependencies.byteUnits
  compile presentationDependencies.rebound
  compile presentationDependencies.rxSharedPreferences
  compile presentationDependencies.libPhoneNumber
  compile presentationDependencies.exoPlayer
  compile presentationDependencies.firebaseMessaging
  compile presentationDependencies.circularProgressView
  compile presentationDependencies.rxLocation
  compile presentationDependencies.googlePlayLocation
  compile presentationDependencies.rxPermissions
  compile presentationDependencies.facebook
  compile presentationDependencies.multiDex
  compile presentationDependencies.confetti
  compile presentationDependencies.amplitude
  compile presentationDependencies.imageCropper
  compile presentationDependencies.firebaseInvites
  compile presentationDependencies.recyclerViewAnimators
  compile presentationDependencies.firebaseRemote
  compile presentationDependencies.branchIo
  compile presentationDependencies.timber
  compile presentationDependencies.blurKit
  compile presentationDependencies.rxAppState

  androidTestCompile presentationTestDependencies.mockito
  androidTestCompile presentationTestDependencies.dexmaker
  androidTestCompile presentationTestDependencies.dexmakerMockito
  androidTestCompile presentationTestDependencies.espresso
  androidTestCompile presentationTestDependencies.androidAnnotations
  androidTestCompile presentationTestDependencies.testingSupportLib

  // Development
  compile developmentDependencies.leakCanary
  compile developmentDependencies.stetho
  compile developmentDependencies.stethoOkHttp

  compile project(':AdapterDelegates')
  compile project(':ViewNavigator')
  compile project(':tribelivesdk')
  compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
    transitive = true;
  }
}

apply plugin: 'com.google.gms.google-services'
